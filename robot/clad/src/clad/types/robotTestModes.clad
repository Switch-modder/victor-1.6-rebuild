/** Cozmo robot test modes
 * @author Daniel Casner
 * ROBOT_CLAD_SHARED
 */

namespace Anki {
namespace Vector {

enum uint_8 TestMode {
  TM_NONE,

  // Goes through motions of placing a block on the ground
  TM_PLACE_BLOCK_ON_GROUND,

  // Follows a changing straight line path. Tests path following during docking.
  TM_DOCK_PATH,

  // Follows an example path. Requires localization
  TM_PATH_FOLLOW,

  // Cycles through PathFollower convenience functions: DriveStraight, DriveArc, DrivePointTurn
  TM_PATH_FOLLOW_CONVENIENCE_FUNCTIONS,

  // Tests ExecuteDirectDrive() or open loop control via HAL::MotorSetPower()
  TM_DIRECT_DRIVE,

  // Moves lift up and down
  TM_LIFT,

  // Toggles between 3 main lift heights: low dock, carry, and high dock
  TM_LIFT_TOGGLE,

  // Tilts head up and down
  TM_HEAD,

  // Prints gyro/accel data
  TM_IMU,

  // Cycle through all LEDs with different colors
  TM_LIGHTS,

  // Drives slow and then stops.
  // Drives fast and then stops.
  // Reports stopping distance and time (in tics).
  TM_STOP_TEST,

  // Drives all motors at max power simultaneously.
  TM_MAX_POWER_TEST,

  // TM_UPDATE_CLAD = testMode.clad

  TM_NUM_TESTS
}

enum uint_8 DriveTestFlags {
      DTF_ENABLE_DIRECT_HAL_TEST = 0x01,    // When enabled, speed parameter (p3) is interpretted as a percentage power value
      DTF_ENABLE_CYCLE_SPEEDS_TEST = 0x02,  // When enabled, cycles through different motor power values going up by powerPercentStep (p2)
      DTF_ENABLE_TOGGLE_DIR = 0x04          // When enabled, toggles direction going at the specified speed (p3)
}
    
enum uint_8 LiftTestFlags {
  LiftTF_TEST_POWER = 0,
  LiftTF_TEST_HEIGHTS,
  LiftTF_NODDING,
  LiftTF_DISABLE_MOTOR
}

enum uint_8 HeadTestFlags {
  HTF_TEST_POWER = 0,
  HTF_TEST_ANGLES,
  HTF_NODDING
}

enum uint_8 IMUTestFlags {
  ITF_DO_TURNS = 0x01
}

enum uint_8 LightTestFlags {
  LTF_CYCLE_ALL = 0x01
}

message StartControllerTestMode
{
  int_32 p1,
  int_32 p2,
  int_32 p3,
  TestMode mode,
}

message RawPWM
{
  int_16 pwm[4]
}

} // namespace Vector
} // namespace Anki
