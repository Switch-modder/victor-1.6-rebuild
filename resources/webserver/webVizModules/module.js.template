/*  
 *  *** Template module for victor web viz *** 
 *  This file should turn data into a visualization.
 *  Anything you need will need to be dynamically added
 *  to the DOM.
 *  You have access to d3, jquery, p5, flot, and datatables.
 *
 *  Instructions:
 *  1) Supply the four required methods in this file
 *  2) Add your module to the list of modules in the 
 *     <head> of webViz.html
 * 
 *  Dev tip: Instead of having to build for mac each time you want
 *    to test something, add a "myMethods.devShouldDumpData = true;" 
 *    just before "myMethods.init = ". Run with webots, but check the
 *    Overview tab for a dump of all data sent to your module. Paste
 *    that in a file resources/webserver/devData.json. Then close
 *    webots and start a web server in your webserver directory:
 *      $ cd resources/webserver
 *      $ python -m SimpleHTTPServer 8888
 *    and open 127.0.0.1:8888/webViz.html in your browser. Your
 *    module will be sent the data in the same order they were
 *    originally received.
 */

(function(myMethods, sendData) {

  // you should fill in myMethods, and sendData
  // is a function you can call to pass data back to
  // the engine

  myMethods.init = function(elem) {
    // Called once when the module is loaded.
    // Any created elements should be placed inside elem.
  };

  myMethods.onData = function(data, elem) {
    // The engine has sent a new json blob.
    // Any created elements should be placed inside elem.
  };

  myMethods.update = function(dt, elem) {
    // Called regularly. dt is the time since the previous call.
    // Note that this update loop originates from the web page,
    // not the engine, so the times may be different.
    // Any created elements should be placed inside elem.
  };

  myMethods.getStyles = function() {
    // Return a string of all css styles to be added for this
    // module. Don't worry about conflicts with other modules;
    // your styles will only apply to the children of the elem
    // object passed into the above methods. However, the css
    // selectors you provide here should be relative to the 
    // document body, e.g., "#myHtmlElement", 
    // not "#moduleTab #myHtmlElement".
    // Replace the below with an empty string if it's unused.
    return `
      #myHtmlElement {
        background-color: red;
      }
    `;
  };

})(moduleMethods, moduleSendDataFunc);
